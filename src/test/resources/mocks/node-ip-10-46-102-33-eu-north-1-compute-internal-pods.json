{
  "kind": "PodList",
  "apiVersion": "v1",
  "metadata": {
    "resourceVersion": "38614140"
  },
  "items": [
    {
      "metadata": {
        "name": "argocd-application-controller-0",
        "generateName": "argocd-application-controller-",
        "namespace": "argocd",
        "uid": "6a9233b4-b326-4851-acb9-c28e787edb31",
        "resourceVersion": "38608607",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:24Z",
        "labels": {
          "app.kubernetes.io/component": "application-controller",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-application-controller",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "apps.kubernetes.io/pod-index": "0",
          "controller-revision-hash": "argocd-application-controller-5bcf87b4cc",
          "helm.sh/chart": "argo-cd-8.6.0",
          "statefulset.kubernetes.io/pod-name": "argocd-application-controller-0"
        },
        "annotations": {
          "checksum/cm": "555ac15d318720b06662b59f2867d4fdd6d4957fe331b487e6443416f6ce13a0",
          "checksum/cmd-params": "5ea56a354d70e77d45eb9df324fb3263f2fcc1ec5bd2aa1d3fdc35a006f8f0bc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "name": "argocd-application-controller",
            "uid": "fe84ff4e-d961-45eb-a720-b4ac9e409752",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:24Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/cm": {},
                  "f:checksum/cmd-params": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:apps.kubernetes.io/pod-index": {},
                  "f:controller-revision-hash": {},
                  "f:helm.sh/chart": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"fe84ff4e-d961-45eb-a720-b4ac9e409752\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"application-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_COMMIT_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_COOLDOWN_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_CONTROLLER_REPLICAS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_CONTROLLER_SHARDING_ALGORITHM\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_HARD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_HYDRATOR_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_MAX\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_JITTER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBECACHEDIR\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8082,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/controller/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/params\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    },
                    "f:workingDir": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-application-controller-tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"argocd-cmd-params-cm\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"argocd-home\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:40Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.76\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "argocd-home",
            "emptyDir": {}
          },
          {
            "name": "argocd-application-controller-tmp",
            "emptyDir": {}
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "secretName": "argocd-repo-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "argocd-cmd-params-cm",
            "configMap": {
              "name": "argocd-cmd-params-cm",
              "items": [
                {
                  "key": "controller.profile.enabled",
                  "path": "profiler.enabled"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-9n295",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "application-controller",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "args": [
              "/usr/local/bin/argocd-application-controller",
              "--metrics-port=8082"
            ],
            "workingDir": "/home/argocd",
            "ports": [
              {
                "name": "metrics",
                "containerPort": 8082,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ARGOCD_CONTROLLER_REPLICAS",
                "value": "1"
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_NAME",
                "value": "argocd-application-controller"
              },
              {
                "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cm",
                    "key": "timeout.reconciliation",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_HARD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cm",
                    "key": "timeout.hard.reconciliation",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_RECONCILIATION_JITTER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cm",
                    "key": "timeout.reconciliation.jitter",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_ERROR_GRACE_PERIOD_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.repo.error.grace.period.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "repo.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.repo.server.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.status.processors",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.operation.processors",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "log.format.timestamp",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.metrics.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.self.heal.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.self.heal.backoff.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_FACTOR",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.self.heal.backoff.factor",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_CAP_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.self.heal.backoff.cap.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_BACKOFF_COOLDOWN_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.self.heal.backoff.cooldown.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SYNC_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.sync.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.repo.server.plaintext",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.repo.server.strict.tls",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_PERSIST_RESOURCE_HEALTH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.resource.health.persist",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.app.state.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.compression",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.db",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "auth",
                    "optional": false
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-password",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.default.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.insecure",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_HEADERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.headers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_OTLP_ATTRS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.attrs",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "application.namespaces",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_CONTROLLER_SHARDING_ALGORITHM",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.sharding.algorithm",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_KUBECTL_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.kubectl.parallelism.limit",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_K8SCLIENT_RETRY_MAX",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.k8sclient.retry.max",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.k8sclient.retry.base.backoff",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_SERVER_SIDE_DIFF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.diff.server.side",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_IGNORE_NORMALIZER_JQ_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.ignore.normalizer.jq.timeout",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_HYDRATOR_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "hydrator.enabled",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_CLUSTER_CACHE_BATCH_EVENTS_PROCESSING",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.cluster.cache.batch.events.processing",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_CLUSTER_CACHE_EVENTS_PROCESSING_INTERVAL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "controller.cluster.cache.events.processing.interval",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_CONTROLLER_COMMIT_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "commit.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "KUBECACHEDIR",
                "value": "/tmp/kubecache"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/controller/tls"
              },
              {
                "name": "argocd-home",
                "mountPath": "/home/argocd"
              },
              {
                "name": "argocd-cmd-params-cm",
                "mountPath": "/home/argocd/params"
              },
              {
                "name": "argocd-application-controller-tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-9n295",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": "metrics",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-application-controller",
        "serviceAccount": "argocd-application-controller",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "hostname": "argocd-application-controller-0",
        "subdomain": "argocd-application-controller",
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-application-controller"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:28Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:25Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:40Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:40Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:24Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.76",
        "podIPs": [
          {
            "ip": "10.42.3.76"
          }
        ],
        "startTime": "2025-10-15T19:21:25Z",
        "containerStatuses": [
          {
            "name": "application-controller",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:27Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://3f3d85a58045807810045118b921a8123470e7475dda295a1aea27886b7b1d97",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/controller/tls"
              },
              {
                "name": "argocd-home",
                "mountPath": "/home/argocd"
              },
              {
                "name": "argocd-cmd-params-cm",
                "mountPath": "/home/argocd/params"
              },
              {
                "name": "argocd-application-controller-tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-9n295",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "argocd-applicationset-controller-549cbdb686-8h59z",
        "generateName": "argocd-applicationset-controller-549cbdb686-",
        "namespace": "argocd",
        "uid": "d3a78d3e-d776-4ec7-9bb2-a9f847e5705f",
        "resourceVersion": "38608324",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app.kubernetes.io/component": "applicationset-controller",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-applicationset-controller",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "helm.sh/chart": "argo-cd-8.6.0",
          "pod-template-hash": "549cbdb686"
        },
        "annotations": {
          "checksum/cmd-params": "5ea56a354d70e77d45eb9df324fb3263f2fcc1ec5bd2aa1d3fdc35a006f8f0bc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "argocd-applicationset-controller-549cbdb686",
            "uid": "4fb49b64-bb2e-4c5a-80b0-6a685423559f",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/cmd-params": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4fb49b64-bb2e-4c5a-80b0-6a685423559f\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"applicationset-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_GITHUB_API_METRICS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_MAX_RESOURCES_STATUS_COUNT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_POLICY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":7000,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"gpg-keyring\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keys\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:20Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.64\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "ssh-known-hosts",
            "configMap": {
              "name": "argocd-ssh-known-hosts-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "tls-certs",
            "configMap": {
              "name": "argocd-tls-certs-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "gpg-keys",
            "configMap": {
              "name": "argocd-gpg-keys-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "gpg-keyring",
            "emptyDir": {}
          },
          {
            "name": "tmp",
            "emptyDir": {}
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "secretName": "argocd-repo-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-k75tc",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "applicationset-controller",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "args": [
              "/usr/local/bin/argocd-applicationset-controller",
              "--metrics-addr=:8080",
              "--probe-addr=:8081",
              "--webhook-addr=:7000"
            ],
            "ports": [
              {
                "name": "metrics",
                "containerPort": 8080,
                "protocol": "TCP"
              },
              {
                "name": "probe",
                "containerPort": 8081,
                "protocol": "TCP"
              },
              {
                "name": "webhook",
                "containerPort": 7000,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_ANNOTATIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.global.preserved.annotations",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_GLOBAL_PRESERVED_LABELS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.global.preserved.labels",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_LEADER_ELECTION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.leader.election",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "repo.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_POLICY",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.policy",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_POLICY_OVERRIDE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.policy.override",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DEBUG",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.debug",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "log.format.timestamp",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_DRY_RUN",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.dryrun",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_MODULES_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.git.submodule",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_PROGRESSIVE_SYNCS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.progressive.syncs",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_TOKENREF_STRICT_MODE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.tokenref.strict.mode",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.new.git.file.globbing",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.repo.server.plaintext",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.repo.server.strict.tls",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.repo.server.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_CONCURRENT_RECONCILIATIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.concurrent.reconciliations.max",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.namespaces",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.scm.root.ca.path",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.allowed.scm.providers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.scm.providers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_GITHUB_API_METRICS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.github.api.metrics",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_WEBHOOK_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.webhook.parallelism.limit",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_REQUEUE_AFTER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.requeue.after",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_MAX_RESOURCES_STATUS_COUNT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.status.max.resources.count",
                    "optional": true
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "gpg-keys",
                "mountPath": "/app/config/gpg/source"
              },
              {
                "name": "gpg-keyring",
                "mountPath": "/app/config/gpg/keys"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-k75tc",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-applicationset-controller",
        "serviceAccount": "argocd-applicationset-controller",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-applicationset-controller"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:20Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:20Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:20Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.64",
        "podIPs": [
          {
            "ip": "10.42.3.64"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "applicationset-controller",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://8692afe0a5ddb7ddefcd417c3fa7883bf3ba0001c787617b8b43f2b56ec893f3",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "gpg-keys",
                "mountPath": "/app/config/gpg/source"
              },
              {
                "name": "gpg-keyring",
                "mountPath": "/app/config/gpg/keys"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-k75tc",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "argocd-dex-server-78c775dd69-gg4hd",
        "generateName": "argocd-dex-server-78c775dd69-",
        "namespace": "argocd",
        "uid": "dd9812b6-bf95-4a6a-a541-b02781ff1873",
        "resourceVersion": "38608543",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:17Z",
        "labels": {
          "app.kubernetes.io/component": "dex-server",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-dex-server",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "helm.sh/chart": "argo-cd-8.6.0",
          "pod-template-hash": "78c775dd69"
        },
        "annotations": {
          "checksum/cmd-params": "5ea56a354d70e77d45eb9df324fb3263f2fcc1ec5bd2aa1d3fdc35a006f8f0bc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "argocd-dex-server-78c775dd69",
            "uid": "b1fd12fc-ae1a-4622-8527-b5181d5ff8da",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/cmd-params": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"b1fd12fc-ae1a-4622-8527-b5181d5ff8da\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"dex-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_DEX_SERVER_DISABLE_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_DEX_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_DEX_SERVER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":5556,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":5557,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":5558,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/shared\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"copyutil\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/shared\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-dex-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"dexconfig\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"static-files\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:32Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.70\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "static-files",
            "emptyDir": {}
          },
          {
            "name": "dexconfig",
            "emptyDir": {}
          },
          {
            "name": "argocd-dex-server-tls",
            "secret": {
              "secretName": "argocd-dex-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-wpqb8",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "copyutil",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "command": [
              "/bin/cp",
              "-n",
              "/usr/local/bin/argocd",
              "/shared/argocd-dex"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "static-files",
                "mountPath": "/shared"
              },
              {
                "name": "dexconfig",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-wpqb8",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "containers": [
          {
            "name": "dex-server",
            "image": "ghcr.io/dexidp/dex:v2.44.0",
            "command": [
              "/shared/argocd-dex"
            ],
            "args": [
              "rundex"
            ],
            "ports": [
              {
                "name": "http",
                "containerPort": 5556,
                "protocol": "TCP"
              },
              {
                "name": "grpc",
                "containerPort": 5557,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 5558,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ARGOCD_DEX_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "dexserver.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEX_SERVER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "dexserver.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "log.format.timestamp",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEX_SERVER_DISABLE_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "dexserver.disable.tls",
                    "optional": true
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "static-files",
                "mountPath": "/shared"
              },
              {
                "name": "dexconfig",
                "mountPath": "/tmp"
              },
              {
                "name": "argocd-dex-server-tls",
                "mountPath": "/tls"
              },
              {
                "name": "kube-api-access-wpqb8",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-dex-server",
        "serviceAccount": "argocd-dex-server",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-dex-server"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:23Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:30Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:31Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:31Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.70",
        "podIPs": [
          {
            "ip": "10.42.3.70"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "initContainerStatuses": [
          {
            "name": "copyutil",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2025-10-15T19:21:23Z",
                "finishedAt": "2025-10-15T19:21:29Z",
                "containerID": "containerd://4f6e6f33d50437b4a4b2358251277ba405e1aea22e29c343ebc18cd2dbf912c9"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://4f6e6f33d50437b4a4b2358251277ba405e1aea22e29c343ebc18cd2dbf912c9",
            "started": false,
            "resources": {},
            "volumeMounts": [
              {
                "name": "static-files",
                "mountPath": "/shared"
              },
              {
                "name": "dexconfig",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-wpqb8",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "containerStatuses": [
          {
            "name": "dex-server",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:31Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "ghcr.io/dexidp/dex:v2.44.0",
            "imageID": "ghcr.io/dexidp/dex@sha256:5d0656fce7d453c0e3b2706abf40c0d0ce5b371fb0b73b3cf714d05f35fa5f86",
            "containerID": "containerd://be8eac7e15baf814a3584528e67b2260d18599e2f9638c90312fe52e2c06d104",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "static-files",
                "mountPath": "/shared"
              },
              {
                "name": "dexconfig",
                "mountPath": "/tmp"
              },
              {
                "name": "argocd-dex-server-tls",
                "mountPath": "/tls"
              },
              {
                "name": "kube-api-access-wpqb8",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 1001,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "argocd-notifications-controller-7d87d96cc4-f7mpd",
        "generateName": "argocd-notifications-controller-7d87d96cc4-",
        "namespace": "argocd",
        "uid": "f2512afb-7f3b-467d-aed4-c149f64ce467",
        "resourceVersion": "38608362",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:17Z",
        "labels": {
          "app.kubernetes.io/component": "notifications-controller",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-notifications-controller",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "helm.sh/chart": "argo-cd-8.6.0",
          "pod-template-hash": "7d87d96cc4"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "argocd-notifications-controller-7d87d96cc4",
            "uid": "941d1129-0994-4874-9549-a0ff8248bb12",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"941d1129-0994-4874-9549-a0ff8248bb12\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"notifications-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":9001,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    },
                    "f:workingDir": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.63\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "tls-certs",
            "configMap": {
              "name": "argocd-tls-certs-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "secretName": "argocd-repo-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-rxxp5",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "notifications-controller",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "args": [
              "/usr/local/bin/argocd-notifications",
              "--metrics-port=9001",
              "--namespace=argocd",
              "--argocd-repo-server=argocd-repo-server:8081",
              "--secret-name=argocd-notifications-secret"
            ],
            "workingDir": "/app",
            "ports": [
              {
                "name": "metrics",
                "containerPort": 9001,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "notificationscontroller.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_NOTIFICATIONS_CONTROLLER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "notificationscontroller.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "log.format.timestamp",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "application.namespaces",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_NOTIFICATION_CONTROLLER_SELF_SERVICE_NOTIFICATION_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "notificationscontroller.selfservice.enabled",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_NOTIFICATION_CONTROLLER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "notificationscontroller.repo.server.plaintext",
                    "optional": true
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "kube-api-access-rxxp5",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-notifications-controller",
        "serviceAccount": "argocd-notifications-controller",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-notifications-controller"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:21Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:21Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:21Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.63",
        "podIPs": [
          {
            "ip": "10.42.3.63"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "notifications-controller",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://85e688564a98953fcf01b002b3f36d501fa38605d33cf1fa08d10f24d89bb7c1",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "kube-api-access-rxxp5",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "argocd-repo-server-5c4b778556-xjrm5",
        "generateName": "argocd-repo-server-5c4b778556-",
        "namespace": "argocd",
        "uid": "9fe313eb-ed69-43f6-9838-52c40d401b0c",
        "resourceVersion": "38608618",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app.kubernetes.io/component": "repo-server",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-repo-server",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "helm.sh/chart": "argo-cd-8.6.0",
          "pod-template-hash": "5c4b778556"
        },
        "annotations": {
          "checksum/cm": "555ac15d318720b06662b59f2867d4fdd6d4957fe331b487e6443416f6ce13a0",
          "checksum/cmd-params": "5ea56a354d70e77d45eb9df324fb3263f2fcc1ec5bd2aa1d3fdc35a006f8f0bc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "argocd-repo-server-5c4b778556",
            "uid": "181af313-0583-499c-b9b2-21965f97a984",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/cm": {},
                  "f:checksum/cmd-params": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"181af313-0583-499c-b9b2-21965f97a984\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"repo-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_MODULES_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_GIT_REQUEST_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_LOG_FORMAT_TIMESTAMP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_RECONCILIATION_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_OCI_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_DISABLE_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_LOGLEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OCI_LAYER_MEDIA_TYPES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OCI_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_ATTRS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_HEADERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_OTLP_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_REVISION_CACHE_LOCK_TIMEOUT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"HELM_CACHE_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_CONFIG_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HELM_DATA_HOME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8084,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/gpg/keys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/gpg/source\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/reposerver/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/helm-working-dir\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/cmp-server/plugins\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"copyutil\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/var/run/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"gpg-keyring\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"gpg-keys\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"helm-working-dir\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"plugins\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"var-files\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:42Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.73\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "helm-working-dir",
            "emptyDir": {}
          },
          {
            "name": "plugins",
            "emptyDir": {}
          },
          {
            "name": "var-files",
            "emptyDir": {}
          },
          {
            "name": "tmp",
            "emptyDir": {}
          },
          {
            "name": "ssh-known-hosts",
            "configMap": {
              "name": "argocd-ssh-known-hosts-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "tls-certs",
            "configMap": {
              "name": "argocd-tls-certs-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "gpg-keys",
            "configMap": {
              "name": "argocd-gpg-keys-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "gpg-keyring",
            "emptyDir": {}
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "secretName": "argocd-repo-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-6g47p",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "copyutil",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "command": [
              "/bin/cp",
              "-n",
              "/usr/local/bin/argocd",
              "/var/run/argocd/argocd-cmp-server"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "var-files",
                "mountPath": "/var/run/argocd"
              },
              {
                "name": "kube-api-access-6g47p",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "containers": [
          {
            "name": "repo-server",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "args": [
              "/usr/local/bin/argocd-repo-server",
              "--port=8081",
              "--metrics-port=8084"
            ],
            "ports": [
              {
                "name": "repo-server",
                "containerPort": 8081,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 8084,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ARGOCD_REPO_SERVER_NAME",
                "value": "argocd-repo-server"
              },
              {
                "name": "ARGOCD_RECONCILIATION_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cm",
                    "key": "timeout.reconciliation",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LOGLEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_LOG_FORMAT_TIMESTAMP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "log.format.timestamp",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.parallelism.limit",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.listen.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_LISTEN_METRICS_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.metrics.listen.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.disable.tls",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.tls.minversion",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.tls.maxversion",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.tls.ciphers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.repo.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.compression",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.db",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "auth",
                    "optional": false
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-password",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.default.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.insecure",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_HEADERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.headers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OTLP_ATTRS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.attrs",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_MAX_COMBINED_DIRECTORY_MANIFESTS_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.max.combined.directory.manifests.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PLUGIN_TAR_EXCLUSIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.plugin.tar.exclusions",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_PLUGIN_USE_MANIFEST_GENERATE_PATHS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.plugin.use.manifest.generate.paths",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_ALLOW_OUT_OF_BOUNDS_SYMLINKS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.allow.oob.symlinks",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_TAR_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.streamed.manifest.max.tar.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_STREAMED_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.streamed.manifest.max.extracted.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.helm.manifest.max.extracted.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_HELM_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.disable.helm.manifest.max.extracted.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_MODULES_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.enable.git.submodule",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_LS_REMOTE_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.git.lsremote.parallelism.limit",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_GIT_REQUEST_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.git.request.timeout",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OCI_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.oci.manifest.max.extracted.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_DISABLE_OCI_MANIFEST_MAX_EXTRACTED_SIZE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.disable.oci.manifest.max.extracted.size",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_OCI_LAYER_MEDIA_TYPES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.oci.layer.media.types",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REVISION_CACHE_LOCK_TIMEOUT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.revision.cache.lock.timeout",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_REPO_SERVER_INCLUDE_HIDDEN_DIRECTORIES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "reposerver.include.hidden.directories",
                    "optional": true
                  }
                }
              },
              {
                "name": "HELM_CACHE_HOME",
                "value": "/helm-working-dir"
              },
              {
                "name": "HELM_CONFIG_HOME",
                "value": "/helm-working-dir"
              },
              {
                "name": "HELM_DATA_HOME",
                "value": "/helm-working-dir"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "gpg-keys",
                "mountPath": "/app/config/gpg/source"
              },
              {
                "name": "gpg-keyring",
                "mountPath": "/app/config/gpg/keys"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "helm-working-dir",
                "mountPath": "/helm-working-dir"
              },
              {
                "name": "plugins",
                "mountPath": "/home/argocd/cmp-server/plugins"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-6g47p",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz?full=true",
                "port": "metrics",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": "metrics",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-repo-server",
        "serviceAccount": "argocd-repo-server",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-repo-server"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:26Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:30Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:42Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:42Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.73",
        "podIPs": [
          {
            "ip": "10.42.3.73"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "initContainerStatuses": [
          {
            "name": "copyutil",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2025-10-15T19:21:24Z",
                "finishedAt": "2025-10-15T19:21:29Z",
                "containerID": "containerd://28656248b196cd5a44a347b2dfaf7e631e8967b897193e8fe1080a44dae7e815"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://28656248b196cd5a44a347b2dfaf7e631e8967b897193e8fe1080a44dae7e815",
            "started": false,
            "resources": {},
            "volumeMounts": [
              {
                "name": "var-files",
                "mountPath": "/var/run/argocd"
              },
              {
                "name": "kube-api-access-6g47p",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "containerStatuses": [
          {
            "name": "repo-server",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:31Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://b5ac140d4c18d476f5ab354ea294c246af84e2bf8dfc3aa4d509c2c7f062aaaa",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "gpg-keys",
                "mountPath": "/app/config/gpg/source"
              },
              {
                "name": "gpg-keyring",
                "mountPath": "/app/config/gpg/keys"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/reposerver/tls"
              },
              {
                "name": "helm-working-dir",
                "mountPath": "/helm-working-dir"
              },
              {
                "name": "plugins",
                "mountPath": "/home/argocd/cmp-server/plugins"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-6g47p",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "argocd-server-57897b89bd-h4gjv",
        "generateName": "argocd-server-57897b89bd-",
        "namespace": "argocd",
        "uid": "f8a73e15-22e5-4824-8121-5dadd72e055e",
        "resourceVersion": "38608553",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:17Z",
        "labels": {
          "app.kubernetes.io/component": "server",
          "app.kubernetes.io/instance": "argocd",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "argocd-server",
          "app.kubernetes.io/part-of": "argocd",
          "app.kubernetes.io/version": "v3.1.8",
          "helm.sh/chart": "argo-cd-8.6.0",
          "pod-template-hash": "57897b89bd"
        },
        "annotations": {
          "checksum/cm": "555ac15d318720b06662b59f2867d4fdd6d4957fe331b487e6443416f6ce13a0",
          "checksum/cmd-params": "5ea56a354d70e77d45eb9df324fb3263f2fcc1ec5bd2aa1d3fdc35a006f8f0bc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "argocd-server-57897b89bd",
            "uid": "8145bbb4-35d4-4623-9d6b-f265f4a64472",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:checksum/cm": {},
                  "f:checksum/cmd-params": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"8145bbb4-35d4-4623-9d6b-f265f4a64472\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ARGOCD_API_CONTENT_TYPES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_GITHUB_API_METRICS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APPLICATION_NAMESPACES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_APP_STATE_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_DEFAULT_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_HYDRATOR_ENABLED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_K8SCLIENT_RETRY_MAX\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_MAX_COOKIE_NUMBER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_BASEHREF\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_CONTENT_SECURITY_POLICY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DEX_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_DISABLE_AUTH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_GZIP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ENABLE_PROXY_EXTENSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOGFORMAT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_LOG_LEVEL\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_METRICS_LISTEN_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OIDC_CACHE_EXPIRATION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_ATTRS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_HEADERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_OTLP_INSECURE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_PLAINTEXT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_STRICT_TLS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_ROOTPATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_STATIC_ASSETS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SERVER_X_FRAME_OPTIONS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_SYNC_WITH_REPLACE_ALLOWED\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_CIPHERS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MAX_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"ARGOCD_TLS_MIN_VERSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDISDB\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_COMPRESSION\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SENTINEL_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_SERVER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"REDIS_USERNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8083,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/app/config/dex/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/server/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/ssh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/app/config/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/home/argocd/params\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/shared/app/custom\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"argocd-cmd-params-cm\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"argocd-dex-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"argocd-repo-server-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:optional": {},
                      "f:secretName": {}
                    }
                  },
                  "k:{\"name\":\"plugins-home\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"ssh-known-hosts\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"styles\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls-certs\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:32Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.67\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "plugins-home",
            "emptyDir": {}
          },
          {
            "name": "tmp",
            "emptyDir": {}
          },
          {
            "name": "ssh-known-hosts",
            "configMap": {
              "name": "argocd-ssh-known-hosts-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "tls-certs",
            "configMap": {
              "name": "argocd-tls-certs-cm",
              "defaultMode": 420
            }
          },
          {
            "name": "styles",
            "configMap": {
              "name": "argocd-styles-cm",
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "argocd-repo-server-tls",
            "secret": {
              "secretName": "argocd-repo-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "tls.key",
                  "path": "tls.key"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "argocd-dex-server-tls",
            "secret": {
              "secretName": "argocd-dex-server-tls",
              "items": [
                {
                  "key": "tls.crt",
                  "path": "tls.crt"
                },
                {
                  "key": "ca.crt",
                  "path": "ca.crt"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "argocd-cmd-params-cm",
            "configMap": {
              "name": "argocd-cmd-params-cm",
              "items": [
                {
                  "key": "server.profile.enabled",
                  "path": "profiler.enabled"
                }
              ],
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-q5szn",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "server",
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "args": [
              "/usr/local/bin/argocd-server",
              "--port=8080",
              "--metrics-port=8083"
            ],
            "ports": [
              {
                "name": "server",
                "containerPort": 8080,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 8083,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ARGOCD_SERVER_NAME",
                "value": "argocd-server"
              },
              {
                "name": "ARGOCD_SERVER_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.insecure",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_BASEHREF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.basehref",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ROOTPATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.rootpath",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOGFORMAT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.log.format",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LOG_LEVEL",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.log.level",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "repo.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.dex.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DISABLE_AUTH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.disable.auth",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_GZIP",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.enable.gzip",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_TIMEOUT_SECONDS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.repo.server.timeout.seconds",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_X_FRAME_OPTIONS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.x.frame.options",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONTENT_SECURITY_POLICY",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.content.security.policy",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.repo.server.plaintext",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_REPO_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.repo.server.strict.tls",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_PLAINTEXT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.dex.server.plaintext",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_DEX_SERVER_STRICT_TLS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.dex.server.strict.tls",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MIN_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.tls.minversion",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_MAX_VERSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.tls.maxversion",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_TLS_CIPHERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.tls.ciphers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.connection.status.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OIDC_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.oidc.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_STATIC_ASSETS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.staticassets",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APP_STATE_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.app.state.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SERVER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.server",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_COMPRESSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.compression",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDISDB",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "redis.db",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "auth",
                    "optional": false
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_USERNAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-username",
                    "optional": true
                  }
                }
              },
              {
                "name": "REDIS_SENTINEL_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "argocd-redis",
                    "key": "redis-sentinel-password",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_DEFAULT_CACHE_EXPIRATION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.default.cache.expiration",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_MAX_COOKIE_NUMBER",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.http.cookie.maxnumber",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.listen.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_METRICS_LISTEN_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.metrics.listen.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_ADDRESS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.address",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_INSECURE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.insecure",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_HEADERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.headers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_OTLP_ATTRS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "otlp.attrs",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATION_NAMESPACES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "application.namespaces",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_ENABLE_PROXY_EXTENSION",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.enable.proxy.extension",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_K8SCLIENT_RETRY_MAX",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.k8sclient.retry.max",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_K8SCLIENT_RETRY_BASE_BACKOFF",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.k8sclient.retry.base.backoff",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_API_CONTENT_TYPES",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.api.content.types",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SERVER_WEBHOOK_PARALLELISM_LIMIT",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.webhook.parallelism.limit",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_NEW_GIT_FILE_GLOBBING",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.new.git.file.globbing",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_SCM_ROOT_CA_PATH",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.scm.root.ca.path",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ALLOWED_SCM_PROVIDERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.allowed.scm.providers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_SCM_PROVIDERS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.scm.providers",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_APPLICATIONSET_CONTROLLER_ENABLE_GITHUB_API_METRICS",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "applicationsetcontroller.enable.github.api.metrics",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_HYDRATOR_ENABLED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "hydrator.enabled",
                    "optional": true
                  }
                }
              },
              {
                "name": "ARGOCD_SYNC_WITH_REPLACE_ALLOWED",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "argocd-cmd-params-cm",
                    "key": "server.sync.replace.allowed",
                    "optional": true
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/server/tls"
              },
              {
                "name": "argocd-dex-server-tls",
                "mountPath": "/app/config/dex/tls"
              },
              {
                "name": "plugins-home",
                "mountPath": "/home/argocd"
              },
              {
                "name": "styles",
                "mountPath": "/shared/app/custom"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "argocd-cmd-params-cm",
                "mountPath": "/home/argocd/params"
              },
              {
                "name": "kube-api-access-q5szn",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz?full=true",
                "port": "server",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": "server",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "argocd-server",
        "serviceAccount": "argocd-server",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchLabels": {
                      "app.kubernetes.io/name": "argocd-server"
                    }
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:20Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:32Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:32Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.67",
        "podIPs": [
          {
            "ip": "10.42.3.67"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "server",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/argoproj/argocd:v3.1.8",
            "imageID": "quay.io/argoproj/argocd@sha256:19ba7f44cba487c4a0c98ac336327c4df04383dff84f87ea1a578972eb62dd17",
            "containerID": "containerd://0ecb4f5b3afe1a1bc4fec5307b75ad98723b06771d228184c892214db88b14ef",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "ssh-known-hosts",
                "mountPath": "/app/config/ssh"
              },
              {
                "name": "tls-certs",
                "mountPath": "/app/config/tls"
              },
              {
                "name": "argocd-repo-server-tls",
                "mountPath": "/app/config/server/tls"
              },
              {
                "name": "argocd-dex-server-tls",
                "mountPath": "/app/config/dex/tls"
              },
              {
                "name": "plugins-home",
                "mountPath": "/home/argocd"
              },
              {
                "name": "styles",
                "mountPath": "/shared/app/custom"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "argocd-cmd-params-cm",
                "mountPath": "/home/argocd/params"
              },
              {
                "name": "kube-api-access-q5szn",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 999,
                "gid": 999,
                "supplementalGroups": [
                  999
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "cert-mgr-dev-cert-manager-59664d9678-x8kbt",
        "generateName": "cert-mgr-dev-cert-manager-59664d9678-",
        "namespace": "infra-dev",
        "uid": "56cece42-97a1-4e1b-bbd5-6e71185a7ef6",
        "resourceVersion": "38608494",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:17Z",
        "labels": {
          "app": "cert-manager",
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "cert-mgr-dev",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "cert-manager",
          "app.kubernetes.io/version": "v1.18.2",
          "helm.sh/chart": "cert-manager-v1.18.2",
          "pod-template-hash": "59664d9678"
        },
        "annotations": {
          "prometheus.io/path": "/metrics",
          "prometheus.io/port": "9402",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "cert-mgr-dev-cert-manager-59664d9678",
            "uid": "82da4de1-33cb-4edb-8536-2073e3c1d059",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:prometheus.io/path": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"82da4de1-33cb-4edb-8536-2073e3c1d059\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"cert-manager-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":9402,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9403,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:27Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.68\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-2c5m2",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cert-manager-controller",
            "image": "quay.io/jetstack/cert-manager-controller:v1.18.2",
            "args": [
              "--v=2",
              "--cluster-resource-namespace=$(POD_NAMESPACE)",
              "--leader-election-namespace=kube-system",
              "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.18.2",
              "--max-concurrent-challenges=60"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 9402,
                "protocol": "TCP"
              },
              {
                "name": "http-healthz",
                "containerPort": 9403,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-2c5m2",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/livez",
                "port": "http-healthz",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 8
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cert-mgr-dev-cert-manager",
        "serviceAccount": "cert-mgr-dev-cert-manager",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {
          "runAsNonRoot": true,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": false,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.68",
        "podIPs": [
          {
            "ip": "10.42.3.68"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "cert-manager-controller",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:26Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/jetstack/cert-manager-controller:v1.18.2",
            "imageID": "quay.io/jetstack/cert-manager-controller@sha256:81316365dc0b713eddddfbf9b8907b2939676e6c0e12beec0f9625f202a36d16",
            "containerID": "containerd://5bcff1443c443e42cbd263699b6f6426bd47d5240e2b11272ce5917ecd56f477",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-2c5m2",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 1000,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "cert-mgr-dev-cert-manager-webhook-589c8f79d7-b7sv2",
        "generateName": "cert-mgr-dev-cert-manager-webhook-589c8f79d7-",
        "namespace": "infra-dev",
        "uid": "f87a744a-75ab-4f14-bf2e-67dd5bc79e33",
        "resourceVersion": "38608565",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app": "webhook",
          "app.kubernetes.io/component": "webhook",
          "app.kubernetes.io/instance": "cert-mgr-dev",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "webhook",
          "app.kubernetes.io/version": "v1.18.2",
          "helm.sh/chart": "cert-manager-v1.18.2",
          "pod-template-hash": "589c8f79d7"
        },
        "annotations": {
          "prometheus.io/path": "/metrics",
          "prometheus.io/port": "9402",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "cert-mgr-dev-cert-manager-webhook-589c8f79d7",
            "uid": "2bf5dd18-f5e7-4fdc-b235-46a12ec055a3",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:prometheus.io/path": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"2bf5dd18-f5e7-4fdc-b235-46a12ec055a3\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"cert-manager-webhook\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9402,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:34Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.71\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-ql2hw",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cert-manager-webhook",
            "image": "quay.io/jetstack/cert-manager-webhook:v1.18.2",
            "args": [
              "--v=2",
              "--secure-port=10250",
              "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
              "--dynamic-serving-ca-secret-name=cert-mgr-dev-cert-manager-webhook-ca",
              "--dynamic-serving-dns-names=cert-mgr-dev-cert-manager-webhook",
              "--dynamic-serving-dns-names=cert-mgr-dev-cert-manager-webhook.$(POD_NAMESPACE)",
              "--dynamic-serving-dns-names=cert-mgr-dev-cert-manager-webhook.$(POD_NAMESPACE).svc"
            ],
            "ports": [
              {
                "name": "https",
                "containerPort": 10250,
                "protocol": "TCP"
              },
              {
                "name": "healthcheck",
                "containerPort": 6080,
                "protocol": "TCP"
              },
              {
                "name": "http-metrics",
                "containerPort": 9402,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-ql2hw",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/livez",
                "port": "healthcheck",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": "healthcheck",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 5,
              "timeoutSeconds": 1,
              "periodSeconds": 5,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cert-mgr-dev-cert-manager-webhook",
        "serviceAccount": "cert-mgr-dev-cert-manager-webhook",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {
          "runAsNonRoot": true,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": false,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:34Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:34Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.71",
        "podIPs": [
          {
            "ip": "10.42.3.71"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "cert-manager-webhook",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:26Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/jetstack/cert-manager-webhook:v1.18.2",
            "imageID": "quay.io/jetstack/cert-manager-webhook@sha256:9431f0d8b5103b06cc6138564f471ac02c6b2638c2fa399d81e28a01d817ae73",
            "containerID": "containerd://3c48b25e0106c10d93bf5798e09164b22753bc3977ba813515292bb4c6e8d404",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-ql2hw",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 1000,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-alloy-logs-tmc5k",
        "generateName": "grafana-monitoring-dev-alloy-logs-",
        "namespace": "infra-dev",
        "uid": "a8f471a4-c17d-44e2-b7cc-660b0f101e81",
        "resourceVersion": "37943310",
        "generation": 1,
        "creationTimestamp": "2025-10-13T06:54:14Z",
        "labels": {
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/name": "alloy-logs",
          "controller-revision-hash": "85d5f5f7bc",
          "pod-template-generation": "1"
        },
        "annotations": {
          "k8s.grafana.com/logs.job": "integrations/alloy",
          "kubectl.kubernetes.io/default-container": "alloy"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "grafana-monitoring-dev-alloy-logs",
            "uid": "6f5ecc21-116e-472d-b424-e313fb5f08de",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:k8s.grafana.com/logs.job": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"6f5ecc21-116e-472d-b424-e313fb5f08de\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"alloy\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ALLOY_DEPLOY_MODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HOSTNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":12345,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/docker/containers\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/log\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config-reloader\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"dockercontainers\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"varlog\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:49Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.4\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config",
            "configMap": {
              "name": "grafana-monitoring-dev-alloy-logs",
              "defaultMode": 420
            }
          },
          {
            "name": "varlog",
            "hostPath": {
              "path": "/var/log",
              "type": ""
            }
          },
          {
            "name": "dockercontainers",
            "hostPath": {
              "path": "/var/lib/docker/containers",
              "type": ""
            }
          },
          {
            "name": "kube-api-access-h7qwx",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "alloy",
            "image": "docker.io/grafana/alloy:v1.9.2",
            "args": [
              "run",
              "/etc/alloy/config.alloy",
              "--storage.path=/tmp/alloy",
              "--server.http.listen-addr=0.0.0.0:12345",
              "--server.http.ui-path-prefix=/",
              "--stability.level=generally-available"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 12345,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ALLOY_DEPLOY_MODE",
                "value": "helm"
              },
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "varlog",
                "readOnly": true,
                "mountPath": "/var/log"
              },
              {
                "name": "dockercontainers",
                "readOnly": true,
                "mountPath": "/var/lib/docker/containers"
              },
              {
                "name": "kube-api-access-h7qwx",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/-/ready",
                "port": 12345,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "FSETID",
                  "KILL",
                  "SETGID",
                  "SETUID",
                  "SETPCAP",
                  "NET_BIND_SERVICE",
                  "NET_RAW",
                  "SYS_CHROOT",
                  "MKNOD",
                  "AUDIT_WRITE",
                  "SETFCAP"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          },
          {
            "name": "config-reloader",
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "args": [
              "--watched-dir=/etc/alloy",
              "--reload-url=http://localhost:12345/-/reload"
            ],
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-h7qwx",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-alloy-logs",
        "serviceAccount": "grafana-monitoring-dev-alloy-logs",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "ip-10-46-102-33.eu-north-1.compute.internal"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:37Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:49Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:49Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.4",
        "podIPs": [
          {
            "ip": "10.42.3.4"
          }
        ],
        "startTime": "2025-10-13T06:54:14Z",
        "containerStatuses": [
          {
            "name": "alloy",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:33Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/grafana/alloy:v1.9.2",
            "imageID": "docker.io/grafana/alloy@sha256:5039cc7a3cbde07120e757decc40f8f55f82c9bd0db45892a8b0e0c9a3371f4b",
            "containerID": "containerd://430ae0951fe8f46ccf39b043e64b8d467dd4fb0b4e9c5959b42530a259b4ea67",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "varlog",
                "mountPath": "/var/log",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "dockercontainers",
                "mountPath": "/var/lib/docker/containers",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "kube-api-access-h7qwx",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          },
          {
            "name": "config-reloader",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:36Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:959d47672fbff2776a04ec62b8afcec89e8c036af84dc5fade50019dab212746",
            "containerID": "containerd://0e76c7eeece24132a6172662c54c17accf1fc954082964e6185fbf35d74cbc2e",
            "started": true,
            "allocatedResources": {
              "cpu": "10m",
              "memory": "50Mi"
            },
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-h7qwx",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-alloy-metrics-0",
        "generateName": "grafana-monitoring-dev-alloy-metrics-",
        "namespace": "infra-dev",
        "uid": "c79e0ed6-6deb-483c-bc48-b34ab6f8c2d8",
        "resourceVersion": "38608590",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:24Z",
        "labels": {
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/name": "alloy-metrics",
          "apps.kubernetes.io/pod-index": "0",
          "controller-revision-hash": "grafana-monitoring-dev-alloy-metrics-7f7b799d4f",
          "statefulset.kubernetes.io/pod-name": "grafana-monitoring-dev-alloy-metrics-0"
        },
        "annotations": {
          "k8s.grafana.com/logs.job": "integrations/alloy",
          "kubectl.kubernetes.io/default-container": "alloy"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "name": "grafana-monitoring-dev-alloy-metrics",
            "uid": "a1cc4edb-3159-41ce-a60f-5e3c19df10be",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:24Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:k8s.grafana.com/logs.job": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:apps.kubernetes.io/pod-index": {},
                  "f:controller-revision-hash": {},
                  "f:statefulset.kubernetes.io/pod-name": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"a1cc4edb-3159-41ce-a60f-5e3c19df10be\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"alloy\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ALLOY_DEPLOY_MODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HOSTNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":12345,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config-reloader\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostname": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:subdomain": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:38Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.75\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config",
            "configMap": {
              "name": "grafana-monitoring-dev-alloy-metrics",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-nmnr5",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "alloy",
            "image": "docker.io/grafana/alloy:v1.9.2",
            "args": [
              "run",
              "/etc/alloy/config.alloy",
              "--storage.path=/tmp/alloy",
              "--server.http.listen-addr=0.0.0.0:12345",
              "--server.http.ui-path-prefix=/",
              "--cluster.enabled=true",
              "--cluster.join-addresses=grafana-monitoring-dev-alloy-metrics-cluster",
              "--cluster.name=alloy-metrics",
              "--stability.level=generally-available"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 12345,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ALLOY_DEPLOY_MODE",
                "value": "helm"
              },
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-nmnr5",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/-/ready",
                "port": 12345,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "FSETID",
                  "KILL",
                  "SETGID",
                  "SETUID",
                  "SETPCAP",
                  "NET_BIND_SERVICE",
                  "NET_RAW",
                  "SYS_CHROOT",
                  "MKNOD",
                  "AUDIT_WRITE",
                  "SETFCAP"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          },
          {
            "name": "config-reloader",
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "args": [
              "--watched-dir=/etc/alloy",
              "--reload-url=http://localhost:12345/-/reload"
            ],
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-nmnr5",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-alloy-metrics",
        "serviceAccount": "grafana-monitoring-dev-alloy-metrics",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "hostname": "grafana-monitoring-dev-alloy-metrics-0",
        "subdomain": "grafana-monitoring-dev-alloy-metrics",
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:24Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:38Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:38Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:24Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.75",
        "podIPs": [
          {
            "ip": "10.42.3.75"
          }
        ],
        "startTime": "2025-10-15T19:21:24Z",
        "containerStatuses": [
          {
            "name": "alloy",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:27Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/grafana/alloy:v1.9.2",
            "imageID": "docker.io/grafana/alloy@sha256:5039cc7a3cbde07120e757decc40f8f55f82c9bd0db45892a8b0e0c9a3371f4b",
            "containerID": "containerd://079a04d0ca85e5f89f71e0cc9193a9fbaacb7e58310a2f0948da861a6652f54d",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-nmnr5",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          },
          {
            "name": "config-reloader",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:27Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:959d47672fbff2776a04ec62b8afcec89e8c036af84dc5fade50019dab212746",
            "containerID": "containerd://43d21740365b75edd95dce5a4d2dbf4fe3c57435000cd0c397403b642a92f1c8",
            "started": true,
            "allocatedResources": {
              "cpu": "10m",
              "memory": "50Mi"
            },
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-nmnr5",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-alloy-receiver-p4w2l",
        "generateName": "grafana-monitoring-dev-alloy-receiver-",
        "namespace": "infra-dev",
        "uid": "d5b74522-efd9-4709-908c-cd1adb3fda64",
        "resourceVersion": "37943307",
        "generation": 1,
        "creationTimestamp": "2025-10-13T06:54:14Z",
        "labels": {
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/name": "alloy-receiver",
          "controller-revision-hash": "6746dc5574",
          "pod-template-generation": "1"
        },
        "annotations": {
          "k8s.grafana.com/logs.job": "integrations/alloy",
          "kubectl.kubernetes.io/default-container": "alloy"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "grafana-monitoring-dev-alloy-receiver",
            "uid": "7f11fbf8-f465-4261-b02f-3382f9e16829",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:k8s.grafana.com/logs.job": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7f11fbf8-f465-4261-b02f-3382f9e16829\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"alloy\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ALLOY_DEPLOY_MODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HOSTNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":4317,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":4318,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9411,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":12345,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config-reloader\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:49Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.3\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config",
            "configMap": {
              "name": "grafana-monitoring-dev-alloy-receiver",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-ztbrz",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "alloy",
            "image": "docker.io/grafana/alloy:v1.9.2",
            "args": [
              "run",
              "/etc/alloy/config.alloy",
              "--storage.path=/tmp/alloy",
              "--server.http.listen-addr=0.0.0.0:12345",
              "--server.http.ui-path-prefix=/",
              "--stability.level=generally-available"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 12345,
                "protocol": "TCP"
              },
              {
                "name": "otlp-grpc",
                "containerPort": 4317,
                "protocol": "TCP"
              },
              {
                "name": "otlp-http",
                "containerPort": 4318,
                "protocol": "TCP"
              },
              {
                "name": "zipkin",
                "containerPort": 9411,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ALLOY_DEPLOY_MODE",
                "value": "helm"
              },
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-ztbrz",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/-/ready",
                "port": 12345,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "FSETID",
                  "KILL",
                  "SETGID",
                  "SETUID",
                  "SETPCAP",
                  "NET_BIND_SERVICE",
                  "NET_RAW",
                  "SYS_CHROOT",
                  "MKNOD",
                  "AUDIT_WRITE",
                  "SETFCAP"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          },
          {
            "name": "config-reloader",
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "args": [
              "--watched-dir=/etc/alloy",
              "--reload-url=http://localhost:12345/-/reload"
            ],
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-ztbrz",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-alloy-receiver",
        "serviceAccount": "grafana-monitoring-dev-alloy-receiver",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "ip-10-46-102-33.eu-north-1.compute.internal"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:37Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:49Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:49Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.3",
        "podIPs": [
          {
            "ip": "10.42.3.3"
          }
        ],
        "startTime": "2025-10-13T06:54:14Z",
        "containerStatuses": [
          {
            "name": "alloy",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:33Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/grafana/alloy:v1.9.2",
            "imageID": "docker.io/grafana/alloy@sha256:5039cc7a3cbde07120e757decc40f8f55f82c9bd0db45892a8b0e0c9a3371f4b",
            "containerID": "containerd://29bf773ac36b5ff4e17fb9d30889b6cf606e2cd506bfa3db955656a85441c119",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-ztbrz",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          },
          {
            "name": "config-reloader",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:36Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:959d47672fbff2776a04ec62b8afcec89e8c036af84dc5fade50019dab212746",
            "containerID": "containerd://e930f99b2a07c77da7754b6deeca7ab3ad88f41441459b275bac65ea48e08e73",
            "started": true,
            "allocatedResources": {
              "cpu": "10m",
              "memory": "50Mi"
            },
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-ztbrz",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-alloy-singleton-55658b9c6b-b6nzl",
        "generateName": "grafana-monitoring-dev-alloy-singleton-55658b9c6b-",
        "namespace": "infra-dev",
        "uid": "8b7c54ac-b773-4b4b-8856-916ba47a08a8",
        "resourceVersion": "38608549",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/name": "alloy-singleton",
          "pod-template-hash": "55658b9c6b"
        },
        "annotations": {
          "k8s.grafana.com/logs.job": "integrations/alloy",
          "kubectl.kubernetes.io/default-container": "alloy"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "grafana-monitoring-dev-alloy-singleton-55658b9c6b",
            "uid": "4e8c62a1-76ec-4429-bbaa-568e4e9d682c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:k8s.grafana.com/logs.job": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4e8c62a1-76ec-4429-bbaa-568e4e9d682c\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"alloy\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ALLOY_DEPLOY_MODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"HOSTNAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":12345,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seccompProfile": {
                        ".": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config-reloader\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/alloy\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:32Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.72\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config",
            "configMap": {
              "name": "grafana-monitoring-dev-alloy-singleton",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-6mlrl",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "alloy",
            "image": "docker.io/grafana/alloy:v1.9.2",
            "args": [
              "run",
              "/etc/alloy/config.alloy",
              "--storage.path=/tmp/alloy",
              "--server.http.listen-addr=0.0.0.0:12345",
              "--server.http.ui-path-prefix=/",
              "--stability.level=generally-available"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 12345,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "ALLOY_DEPLOY_MODE",
                "value": "helm"
              },
              {
                "name": "HOSTNAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-6mlrl",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "readinessProbe": {
              "httpGet": {
                "path": "/-/ready",
                "port": 12345,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "FSETID",
                  "KILL",
                  "SETGID",
                  "SETUID",
                  "SETPCAP",
                  "NET_BIND_SERVICE",
                  "NET_RAW",
                  "SYS_CHROOT",
                  "MKNOD",
                  "AUDIT_WRITE",
                  "SETFCAP"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false,
              "seccompProfile": {
                "type": "RuntimeDefault"
              }
            }
          },
          {
            "name": "config-reloader",
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "args": [
              "--watched-dir=/etc/alloy",
              "--reload-url=http://localhost:12345/-/reload"
            ],
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-6mlrl",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-alloy-singleton",
        "serviceAccount": "grafana-monitoring-dev-alloy-singleton",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:21Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:32Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:32Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.72",
        "podIPs": [
          {
            "ip": "10.42.3.72"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "alloy",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:21Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/grafana/alloy:v1.9.2",
            "imageID": "docker.io/grafana/alloy@sha256:5039cc7a3cbde07120e757decc40f8f55f82c9bd0db45892a8b0e0c9a3371f4b",
            "containerID": "containerd://2b5dcbf69f1649b7cee08fbab67b7813176b98c5bcd9bb10aa8f0d9b7fac3ac0",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-6mlrl",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          },
          {
            "name": "config-reloader",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:21Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/prometheus-operator/prometheus-config-reloader:v0.81.0",
            "imageID": "quay.io/prometheus-operator/prometheus-config-reloader@sha256:959d47672fbff2776a04ec62b8afcec89e8c036af84dc5fade50019dab212746",
            "containerID": "containerd://e04674499e1e1ae8ba0d6cb2dfd620c6c21e4d21d700c2838b69ce0215c08ab4",
            "started": true,
            "allocatedResources": {
              "cpu": "10m",
              "memory": "50Mi"
            },
            "resources": {
              "requests": {
                "cpu": "10m",
                "memory": "50Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config",
                "mountPath": "/etc/alloy"
              },
              {
                "name": "kube-api-access-6mlrl",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-kube-state-metrics-67f8bbc785-tw8jg",
        "generateName": "grafana-monitoring-dev-kube-state-metrics-67f8bbc785-",
        "namespace": "infra-dev",
        "uid": "382b1bcd-1e7b-4a01-915a-1e3fe29376b6",
        "resourceVersion": "38608583",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "kube-state-metrics",
          "app.kubernetes.io/part-of": "kube-state-metrics",
          "app.kubernetes.io/version": "2.16.0",
          "helm.sh/chart": "kube-state-metrics-6.1.0",
          "pod-template-hash": "67f8bbc785",
          "release": "grafana-monitoring-dev"
        },
        "annotations": {
          "k8s.grafana.com/logs.job": "integrations/kubernetes/kube-state-metrics"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "grafana-monitoring-dev-kube-state-metrics-67f8bbc785",
            "uid": "ec360199-2a0c-48c7-90eb-b09d6b8696fc",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:k8s.grafana.com/logs.job": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {},
                  "f:release": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"ec360199-2a0c-48c7-90eb-b09d6b8696fc\"}": {}
                }
              },
              "f:spec": {
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"kube-state-metrics\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:fsGroup": {},
                  "f:runAsGroup": {},
                  "f:runAsNonRoot": {},
                  "f:runAsUser": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:37Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.66\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-zlxj5",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-state-metrics",
            "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.16.0",
            "args": [
              "--port=8080",
              "--resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments",
              "--metric-labels-allowlist=nodes=[agentpool,alpha.eksctl.io/cluster-name,alpha.eksctl.io/nodegroup-name,beta.kubernetes.io/instance-type,cloud.google.com/gke-nodepool,cluster-name,ec2.amazonaws.com/Name,ec2.amazonaws.com/aws-autoscaling-groupName,ec2.amazonaws.com/aws-autoscaling-group-name,ec2.amazonaws.com/name,eks.amazonaws.com/nodegroup,k8s.io/cloud-provider-aws,karpenter.sh/nodepool,kubernetes.azure.com/cluster,kubernetes.io/arch,kubernetes.io/hostname,kubernetes.io/os,node.kubernetes.io/instance-type,topology.kubernetes.io/region,topology.kubernetes.io/zone]"
            ],
            "ports": [
              {
                "name": "http",
                "containerPort": 8080,
                "protocol": "TCP"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-zlxj5",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/livez",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 5,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/readyz",
                "port": 8081,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 5,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-kube-state-metrics",
        "serviceAccount": "grafana-monitoring-dev-kube-state-metrics",
        "automountServiceAccountToken": true,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {
          "runAsUser": 65534,
          "runAsGroup": 65534,
          "runAsNonRoot": true,
          "fsGroup": 65534,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:26Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:37Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:37Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.66",
        "podIPs": [
          {
            "ip": "10.42.3.66"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "kube-state-metrics",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:24Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.16.0",
            "imageID": "registry.k8s.io/kube-state-metrics/kube-state-metrics@sha256:e750cd4b43f782e3106537026c2995cac85d921aedea334e1d16caad7877c360",
            "containerID": "containerd://7f30668bdbd06bbdc391d40ff49115c3d30849d35cc93e843a5a029f3a76a47b",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-zlxj5",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "grafana-monitoring-dev-node-exporter-rdr8k",
        "generateName": "grafana-monitoring-dev-node-exporter-",
        "namespace": "infra-dev",
        "uid": "c17342fa-995f-456f-9abb-904ab194a2d3",
        "resourceVersion": "37943110",
        "generation": 1,
        "creationTimestamp": "2025-10-13T06:54:14Z",
        "labels": {
          "app.kubernetes.io/component": "metrics",
          "app.kubernetes.io/instance": "grafana-monitoring-dev",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "node-exporter",
          "app.kubernetes.io/part-of": "node-exporter",
          "app.kubernetes.io/version": "1.9.1",
          "controller-revision-hash": "79fb66f57d",
          "helm.sh/chart": "node-exporter-4.47.1",
          "pod-template-generation": "1",
          "release": "grafana-monitoring-dev"
        },
        "annotations": {
          "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
          "k8s.grafana.com/logs.job": "integrations/node_exporter"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "grafana-monitoring-dev-node-exporter",
            "uid": "6d137bb0-8e07-41c2-bd60-a34837ca6561",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                  "f:k8s.grafana.com/logs.job": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:app.kubernetes.io/version": {},
                  "f:controller-revision-hash": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-generation": {},
                  "f:release": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"6d137bb0-8e07-41c2-bd60-a34837ca6561\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"node-exporter\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"HOST_IP\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":9100,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/proc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/root\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/sys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:hostPID": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:fsGroup": {},
                  "f:runAsGroup": {},
                  "f:runAsNonRoot": {},
                  "f:runAsUser": {}
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"proc\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"root\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"sys\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:21Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.46.102.33\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "proc",
            "hostPath": {
              "path": "/proc",
              "type": ""
            }
          },
          {
            "name": "sys",
            "hostPath": {
              "path": "/sys",
              "type": ""
            }
          },
          {
            "name": "root",
            "hostPath": {
              "path": "/",
              "type": ""
            }
          }
        ],
        "containers": [
          {
            "name": "node-exporter",
            "image": "quay.io/prometheus/node-exporter:v1.9.1",
            "args": [
              "--path.procfs=/host/proc",
              "--path.sysfs=/host/sys",
              "--path.rootfs=/host/root",
              "--path.udev.data=/host/root/run/udev/data",
              "--web.listen-address=[$(HOST_IP)]:9100"
            ],
            "ports": [
              {
                "name": "metrics",
                "hostPort": 9100,
                "containerPort": 9100,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "HOST_IP",
                "value": "0.0.0.0"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "proc",
                "readOnly": true,
                "mountPath": "/host/proc"
              },
              {
                "name": "sys",
                "readOnly": true,
                "mountPath": "/host/sys"
              },
              {
                "name": "root",
                "readOnly": true,
                "mountPath": "/host/root",
                "mountPropagation": "HostToContainer"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/",
                "port": "metrics",
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/",
                "port": "metrics",
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "readOnlyRootFilesystem": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "grafana-monitoring-dev-node-exporter",
        "serviceAccount": "grafana-monitoring-dev-node-exporter",
        "automountServiceAccountToken": false,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "hostNetwork": true,
        "hostPID": true,
        "securityContext": {
          "runAsUser": 65534,
          "runAsGroup": 65534,
          "runAsNonRoot": true,
          "fsGroup": 65534
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "ip-10-46-102-33.eu-north-1.compute.internal"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:21Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:21Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:21Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:14Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.46.102.33",
        "podIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "startTime": "2025-10-13T06:54:14Z",
        "containerStatuses": [
          {
            "name": "node-exporter",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/prometheus/node-exporter:v1.9.1",
            "imageID": "quay.io/prometheus/node-exporter@sha256:d00a542e409ee618a4edc67da14dd48c5da66726bbd5537ab2af9c1dfc442c8a",
            "containerID": "containerd://40796c1489e46433d0fc663d5aaa396843ea793ae73968d1ebe5ef249f8d95fc",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "proc",
                "mountPath": "/host/proc",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "sys",
                "mountPath": "/host/sys",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "root",
                "mountPath": "/host/root",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65534,
                "gid": 65534,
                "supplementalGroups": [
                  65534
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-spot-operator-6gds2",
        "generateName": "kube-spot-operator-",
        "namespace": "infra-dev",
        "uid": "671eb1c7-50f3-4602-88e2-80049d57ef4b",
        "resourceVersion": "38097685",
        "generation": 1,
        "creationTimestamp": "2025-10-13T21:07:14Z",
        "labels": {
          "app.kubernetes.io/instance": "kube-spot-operator-dev",
          "app.kubernetes.io/name": "kube-spot-operator",
          "controller-revision-hash": "9577c5c89",
          "pod-template-generation": "2"
        },
        "annotations": {
          "configmap/hash": "3fc9712b5933ff2152b7ae6c237c219930c817605da3d95ce2957dcfb6b265b5"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-spot-operator",
            "uid": "68a8eb1a-c3c3-4572-8432-b2f8e77306f1",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T21:07:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:configmap/hash": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:controller-revision-hash": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"68a8eb1a-c3c3-4572-8432-b2f8e77306f1\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"cloudnative-backend\"}": {
                    ".": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"AWS_ROLE_ARN\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"AWS_ROLE_SESSION_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"AWS_WEB_IDENTITY_TOKEN_FILE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"CURRENT_KUBERNETES_NODE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/opt/app/configmap.json\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/var/run/secrets/sts-web-identity/token\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:imagePullSecrets": {
                  ".": {},
                  "k:{\"name\":\"regcred\"}": {}
                },
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"kube-spot-operator-cm\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"sts-web-identity\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T21:07:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.62\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-spot-operator-cm",
            "configMap": {
              "name": "kube-spot-operator",
              "defaultMode": 420
            }
          },
          {
            "name": "sts-web-identity",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "audience": "sts.amazonaws.com",
                    "expirationSeconds": 3600,
                    "path": "kube-spot-operator"
                  }
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-7j9n2",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cloudnative-backend",
            "image": "ghcr.io/kamil-perczynski/kube-spot-operator:main-a9a5e9d",
            "ports": [
              {
                "name": "http",
                "containerPort": 8080,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "CURRENT_KUBERNETES_NODE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "AWS_ROLE_ARN",
                "value": "arn:aws:iam::462027713001:role/billing-test-k3s-service-account-role"
              },
              {
                "name": "AWS_ROLE_SESSION_NAME",
                "value": "kube-spot-operator"
              },
              {
                "name": "AWS_WEB_IDENTITY_TOKEN_FILE",
                "value": "/var/run/secrets/sts-web-identity/token/kube-spot-operator"
              }
            ],
            "resources": {
              "limits": {
                "memory": "240Mi"
              },
              "requests": {
                "memory": "200Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "kube-spot-operator-cm",
                "mountPath": "/opt/app/configmap.json",
                "subPath": "configmap.json"
              },
              {
                "name": "sts-web-identity",
                "mountPath": "/var/run/secrets/sts-web-identity/token"
              },
              {
                "name": "kube-api-access-7j9n2",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/actuator/health",
                "port": "http",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/actuator/health",
                "port": "http",
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {}
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "kube-spot-operator",
        "serviceAccount": "kube-spot-operator",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "imagePullSecrets": [
          {
            "name": "regcred"
          }
        ],
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "ip-10-46-102-33.eu-north-1.compute.internal"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T21:07:19Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T21:07:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T21:07:31Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T21:07:31Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T21:07:14Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.62",
        "podIPs": [
          {
            "ip": "10.42.3.62"
          }
        ],
        "startTime": "2025-10-13T21:07:14Z",
        "containerStatuses": [
          {
            "name": "cloudnative-backend",
            "state": {
              "running": {
                "startedAt": "2025-10-13T21:07:19Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "ghcr.io/kamil-perczynski/kube-spot-operator:main-a9a5e9d",
            "imageID": "ghcr.io/kamil-perczynski/kube-spot-operator@sha256:0e9de0f5e12650723966b17459fb233d47326ea0a4e16c7239c5b4f0407e608f",
            "containerID": "containerd://c56b373b11af56f322aba3203e7a48033ddca1359f881e561cb5b4c64c99b950",
            "started": true,
            "allocatedResources": {
              "memory": "200Mi"
            },
            "resources": {
              "limits": {
                "memory": "240Mi"
              },
              "requests": {
                "memory": "200Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "kube-spot-operator-cm",
                "mountPath": "/opt/app/configmap.json"
              },
              {
                "name": "sts-web-identity",
                "mountPath": "/var/run/secrets/sts-web-identity/token"
              },
              {
                "name": "kube-api-access-7j9n2",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  10,
                  11,
                  20,
                  26,
                  27
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "coredns-64fd4b4794-5hwdm",
        "generateName": "coredns-64fd4b4794-",
        "namespace": "kube-system",
        "uid": "8a5d8140-6aee-49c5-9362-fea50eb72f2f",
        "resourceVersion": "38608500",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "k8s-app": "kube-dns",
          "pod-template-hash": "64fd4b4794"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "coredns-64fd4b4794",
            "uid": "7fa30919-f6ed-4812-a57a-7d0499db1efc",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7fa30919-f6ed-4812-a57a-7d0499db1efc\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"coredns\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/coredns\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/etc/coredns/custom\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:topologySpreadConstraints": {
                  ".": {},
                  "k:{\"topologyKey\":\"kubernetes.io/hostname\",\"whenUnsatisfiable\":\"DoNotSchedule\"}": {
                    ".": {},
                    "f:labelSelector": {},
                    "f:maxSkew": {},
                    "f:topologyKey": {},
                    "f:whenUnsatisfiable": {}
                  },
                  "k:{\"topologyKey\":\"topology.kubernetes.io/zone\",\"whenUnsatisfiable\":\"ScheduleAnyway\"}": {
                    ".": {},
                    "f:labelSelector": {},
                    "f:maxSkew": {},
                    "f:topologyKey": {},
                    "f:whenUnsatisfiable": {}
                  }
                },
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"custom-config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:27Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.74\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "coredns",
              "items": [
                {
                  "key": "Corefile",
                  "path": "Corefile"
                },
                {
                  "key": "NodeHosts",
                  "path": "NodeHosts"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "custom-config-volume",
            "configMap": {
              "name": "coredns-custom",
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-9kttj",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "coredns",
            "image": "rancher/mirrored-coredns-coredns:1.12.3",
            "args": [
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports": [
              {
                "name": "dns",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 9153,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns"
              },
              {
                "name": "custom-config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns/custom"
              },
              {
                "name": "kube-api-access-9kttj",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/ready",
                "port": 8181,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 2,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "all"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "coredns",
        "serviceAccount": "coredns",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node-role.kubernetes.io/control-plane",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node-role.kubernetes.io/master",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority",
        "topologySpreadConstraints": [
          {
            "maxSkew": 1,
            "topologyKey": "kubernetes.io/hostname",
            "whenUnsatisfiable": "DoNotSchedule",
            "labelSelector": {
              "matchLabels": {
                "k8s-app": "kube-dns"
              }
            }
          },
          {
            "maxSkew": 1,
            "topologyKey": "topology.kubernetes.io/zone",
            "whenUnsatisfiable": "ScheduleAnyway",
            "labelSelector": {
              "matchLabels": {
                "k8s-app": "kube-dns"
              }
            }
          }
        ]
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:19Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.74",
        "podIPs": [
          {
            "ip": "10.42.3.74"
          }
        ],
        "startTime": "2025-10-15T19:21:19Z",
        "containerStatuses": [
          {
            "name": "coredns",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:26Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/rancher/mirrored-coredns-coredns:1.12.3",
            "imageID": "docker.io/rancher/mirrored-coredns-coredns@sha256:1391544c978029fcddc65068f6ad67f396e55585b664ecccd7fefba029b9b706",
            "containerID": "containerd://9af9ab48de8e60d94ad8f7311a108fda79e4a98ef895bdbc03c6c3478e95d09e",
            "started": true,
            "allocatedResources": {
              "cpu": "100m",
              "memory": "70Mi"
            },
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "mountPath": "/etc/coredns",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "custom-config-volume",
                "mountPath": "/etc/coredns/custom",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              },
              {
                "name": "kube-api-access-9kttj",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 65532,
                "gid": 65532,
                "supplementalGroups": [
                  65532
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "local-path-provisioner-774c6665dc-4c8zr",
        "generateName": "local-path-provisioner-774c6665dc-",
        "namespace": "kube-system",
        "uid": "4f8ecb9e-fa84-4cdb-8d68-5f282d46e200",
        "resourceVersion": "38608511",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:18Z",
        "labels": {
          "app": "local-path-provisioner",
          "pod-template-hash": "774c6665dc"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "local-path-provisioner-774c6665dc",
            "uid": "4cdfe34e-1f39-4910-9233-1d76f03e31b2",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:18Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4cdfe34e-1f39-4910-9233-1d76f03e31b2\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"local-path-provisioner\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/config/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:28Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.69\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "local-path-config",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-f7jqx",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "local-path-provisioner",
            "image": "rancher/local-path-provisioner:v0.0.31",
            "command": [
              "local-path-provisioner",
              "start",
              "--config",
              "/etc/config/config.json"
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config-volume",
                "mountPath": "/etc/config/"
              },
              {
                "name": "kube-api-access-f7jqx",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "local-path-provisioner-service-account",
        "serviceAccount": "local-path-provisioner-service-account",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node-role.kubernetes.io/control-plane",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node-role.kubernetes.io/master",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:27Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.69",
        "podIPs": [
          {
            "ip": "10.42.3.69"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "local-path-provisioner",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:26Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/rancher/local-path-provisioner:v0.0.31",
            "imageID": "docker.io/rancher/local-path-provisioner@sha256:80496fdeb307541007621959aa13aed41d31db9cd2dc4167c19833e0bfa3878c",
            "containerID": "containerd://ef3045249d9790e892bb1416955a591c04be91886485c08a586ad6604f5f2ca1",
            "started": true,
            "resources": {},
            "volumeMounts": [
              {
                "name": "config-volume",
                "mountPath": "/etc/config/"
              },
              {
                "name": "kube-api-access-f7jqx",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  10,
                  11,
                  20,
                  26,
                  27
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "metrics-server-7bfffcd44-6nn6v",
        "generateName": "metrics-server-7bfffcd44-",
        "namespace": "kube-system",
        "uid": "020d9249-b63a-448e-8483-92d505856d10",
        "resourceVersion": "38608599",
        "generation": 1,
        "creationTimestamp": "2025-10-15T19:21:17Z",
        "labels": {
          "k8s-app": "metrics-server",
          "pod-template-hash": "7bfffcd44"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "metrics-server-7bfffcd44",
            "uid": "2cd085c1-0bef-4322-b9a0-2eb1dda81e0e",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:17Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"2cd085c1-0bef-4322-b9a0-2eb1dda81e0e\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"metrics-server\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:readOnlyRootFilesystem": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"tmp-dir\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-15T19:21:39Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.65\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "tmp-dir",
            "emptyDir": {}
          },
          {
            "name": "kube-api-access-k289q",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "metrics-server",
            "image": "rancher/mirrored-metrics-server:v0.8.0",
            "args": [
              "--cert-dir=/tmp",
              "--secure-port=10250",
              "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
              "--kubelet-use-node-status-port",
              "--metric-resolution=15s",
              "--tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
            ],
            "ports": [
              {
                "name": "https",
                "containerPort": 10250,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "tmp-dir",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-k289q",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/livez",
                "port": "https",
                "scheme": "HTTPS"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/readyz",
                "port": "https",
                "scheme": "HTTPS"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 2,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "runAsUser": 1000,
              "runAsNonRoot": true,
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "metrics-server",
        "serviceAccount": "metrics-server",
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node-role.kubernetes.io/control-plane",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node-role.kubernetes.io/master",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:20Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:39Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:39Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-15T19:21:18Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.65",
        "podIPs": [
          {
            "ip": "10.42.3.65"
          }
        ],
        "startTime": "2025-10-15T19:21:18Z",
        "containerStatuses": [
          {
            "name": "metrics-server",
            "state": {
              "running": {
                "startedAt": "2025-10-15T19:21:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/rancher/mirrored-metrics-server:v0.8.0",
            "imageID": "docker.io/rancher/mirrored-metrics-server@sha256:89258156d0e9af60403eafd44da9676fd66f600c7934d468ccc17e42b199aee2",
            "containerID": "containerd://1d843d63dfdd606d8a146f06a7484ff63e0c14b7b6affaf815a9d1d24fec582f",
            "started": true,
            "allocatedResources": {
              "cpu": "100m",
              "memory": "70Mi"
            },
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "tmp-dir",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-k289q",
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                "readOnly": true,
                "recursiveReadOnly": "Disabled"
              }
            ],
            "user": {
              "linux": {
                "uid": 1000,
                "gid": 0,
                "supplementalGroups": [
                  0
                ]
              }
            }
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "svclb-traefik-7aa1c6d0-rfdl8",
        "generateName": "svclb-traefik-7aa1c6d0-",
        "namespace": "kube-system",
        "uid": "3ec17db5-ec3c-4148-9ecb-13562ae2bcfe",
        "resourceVersion": "37943169",
        "generation": 1,
        "creationTimestamp": "2025-10-13T06:54:15Z",
        "labels": {
          "app": "svclb-traefik-7aa1c6d0",
          "controller-revision-hash": "5d8c79487b",
          "pod-template-generation": "5",
          "svccontroller.k3s.cattle.io/svcname": "traefik",
          "svccontroller.k3s.cattle.io/svcnamespace": "kube-system"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "svclb-traefik-7aa1c6d0",
            "uid": "7f18d9e4-a835-4d35-9f4e-4ca55bb1f60a",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:15Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:pod-template-generation": {},
                  "f:svccontroller.k3s.cattle.io/svcname": {},
                  "f:svccontroller.k3s.cattle.io/svcnamespace": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"7f18d9e4-a835-4d35-9f4e-4ca55bb1f60a\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"lb-tcp-443\"}": {
                    ".": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"DEST_IPS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"DEST_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"DEST_PROTO\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SRC_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SRC_RANGES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  },
                  "k:{\"name\":\"lb-tcp-80\"}": {
                    ".": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"DEST_IPS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"DEST_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"DEST_PROTO\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SRC_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"SRC_RANGES\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:sysctls": {}
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {}
              }
            }
          },
          {
            "manager": "k3s",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2025-10-13T06:54:32Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.42.3.2\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "containers": [
          {
            "name": "lb-tcp-80",
            "image": "rancher/klipper-lb:v0.4.13",
            "ports": [
              {
                "name": "lb-tcp-80",
                "hostPort": 80,
                "containerPort": 80,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "SRC_PORT",
                "value": "80"
              },
              {
                "name": "SRC_RANGES",
                "value": "0.0.0.0/0"
              },
              {
                "name": "DEST_PROTO",
                "value": "TCP"
              },
              {
                "name": "DEST_PORT",
                "value": "31669"
              },
              {
                "name": "DEST_IPS",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "status.hostIPs"
                  }
                }
              }
            ],
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN"
                ]
              }
            }
          },
          {
            "name": "lb-tcp-443",
            "image": "rancher/klipper-lb:v0.4.13",
            "ports": [
              {
                "name": "lb-tcp-443",
                "hostPort": 443,
                "containerPort": 443,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "SRC_PORT",
                "value": "443"
              },
              {
                "name": "SRC_RANGES",
                "value": "0.0.0.0/0"
              },
              {
                "name": "DEST_PROTO",
                "value": "TCP"
              },
              {
                "name": "DEST_PORT",
                "value": "31747"
              },
              {
                "name": "DEST_IPS",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "status.hostIPs"
                  }
                }
              }
            ],
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN"
                ]
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "svclb",
        "serviceAccount": "svclb",
        "automountServiceAccountToken": false,
        "nodeName": "ip-10-46-102-33.eu-north-1.compute.internal",
        "securityContext": {
          "sysctls": [
            {
              "name": "net.ipv4.ip_forward",
              "value": "1"
            }
          ]
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "ip-10-46-102-33.eu-north-1.compute.internal"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node-role.kubernetes.io/master",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node-role.kubernetes.io/control-plane",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:32Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:15Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:32Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:32Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2025-10-13T06:54:15Z"
          }
        ],
        "hostIP": "10.46.102.33",
        "hostIPs": [
          {
            "ip": "10.46.102.33"
          }
        ],
        "podIP": "10.42.3.2",
        "podIPs": [
          {
            "ip": "10.42.3.2"
          }
        ],
        "startTime": "2025-10-13T06:54:15Z",
        "containerStatuses": [
          {
            "name": "lb-tcp-443",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:31Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/rancher/klipper-lb:v0.4.13",
            "imageID": "docker.io/rancher/klipper-lb@sha256:7eb86d5b908ec6ddd9796253d8cc2f43df99420fc8b8a18452a94dc56f86aca0",
            "containerID": "containerd://d00acc5807ab991b12be16c7ff7f3894ba5f9779fe0ec3eb9e48aaedd31b6c08",
            "started": true,
            "resources": {},
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  10,
                  11,
                  20,
                  26,
                  27
                ]
              }
            }
          },
          {
            "name": "lb-tcp-80",
            "state": {
              "running": {
                "startedAt": "2025-10-13T06:54:31Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/rancher/klipper-lb:v0.4.13",
            "imageID": "docker.io/rancher/klipper-lb@sha256:7eb86d5b908ec6ddd9796253d8cc2f43df99420fc8b8a18452a94dc56f86aca0",
            "containerID": "containerd://1e73fd5e0f2bb3833d9bd13a73014ce792db82bdc95843a4f62d1c30f5cc5db2",
            "started": true,
            "resources": {},
            "user": {
              "linux": {
                "uid": 0,
                "gid": 0,
                "supplementalGroups": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  6,
                  10,
                  11,
                  20,
                  26,
                  27
                ]
              }
            }
          }
        ],
        "qosClass": "BestEffort"
      }
    }
  ]
}
